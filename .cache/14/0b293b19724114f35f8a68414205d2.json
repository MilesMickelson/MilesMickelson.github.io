{"id":"../node_modules/prop-types/checkPropTypes.js","dependencies":[{"name":"/Users/MilesMickelson/MilesOfCode/Portfolio.io/package.json","includedInParent":true,"mtime":1583183086331},{"name":"/Users/MilesMickelson/MilesOfCode/Portfolio.io/node_modules/prop-types/package.json","includedInParent":true,"mtime":1580434765466},{"name":"./lib/ReactPropTypesSecret","loc":{"line":13,"column":37},"parent":"/Users/MilesMickelson/MilesOfCode/Portfolio.io/node_modules/prop-types/checkPropTypes.js","resolved":"/Users/MilesMickelson/MilesOfCode/Portfolio.io/node_modules/prop-types/lib/ReactPropTypesSecret.js"}],"generated":{"js":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/prop-types/checkPropTypes.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}}],"sources":{"../node_modules/prop-types/checkPropTypes.js":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n"},"lineCount":103}},"error":null,"hash":"27e1e4217077be972b8788523e8c23d3","cacheData":{"env":{}}}